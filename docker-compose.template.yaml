services:
  schwarbot:
    image: registry.digitalocean.com/${REGISTRY_NAME}/schwarbot:${SHORT_SHA}
    container_name: schwarbot
    environment:
      - OTEL_METRICS_EXPORTER_ENDPOINT=http://grafana:4318
    env_file:
      - .env
    volumes:
      - ${DATA_VOLUME_PATH}:/data
    depends_on:
      - grafana
    restart: unless-stopped

  grafana:
    build:
      context: .
      dockerfile: Dockerfile.grafana
    container_name: grafana
    ports:
      - "3000:3000"  # Grafana UI
      - "4318:4318"  # OTLP HTTP receiver
    volumes:
      - grafana-data:/data
      - ./schwab.db:/data/schwab.db:ro
      - ./grafana-datasource.yaml:/otel-lgtm/grafana/conf/provisioning/datasources/sqlite.yaml:ro
    restart: unless-stopped

volumes:
  grafana-data:
