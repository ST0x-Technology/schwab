services:
  schwarbot:
    image: ${DOCKER_IMAGE}
    pull_policy: ${PULL_POLICY}
    container_name: schwarbot
    command: ["server"]
    environment:
      - BROKER=${SCHWAB_BROKER}
      - OTEL_METRICS_EXPORTER_ENDPOINT=http://grafana:4318
      - DATABASE_URL=sqlite:///data/schwab.db
      - ENCRYPTION_KEY
    env_file:
      - .env
    volumes:
      - ${DATA_VOLUME_PATH}:/data
    depends_on:
      - grafana
    restart: unless-stopped

  alpacabot:
    image: ${DOCKER_IMAGE}
    pull_policy: ${PULL_POLICY}
    container_name: alpacabot
    environment:
      - BROKER=${ALPACA_BROKER}
      - OTEL_METRICS_EXPORTER_ENDPOINT=http://grafana:4318
      - DATABASE_URL=sqlite:///data/alpaca.db
    env_file:
      - .env
    volumes:
      - ${DATA_VOLUME_PATH}:/data
    depends_on:
      - grafana
    restart: unless-stopped

  reporter:
    image: ${DOCKER_IMAGE}
    pull_policy: ${PULL_POLICY}
    container_name: reporter
    command: ["reporter"]
    env_file:
      - .env
    volumes:
      - ${DATA_VOLUME_PATH}:/data
    depends_on:
      - grafana
    restart: unless-stopped

  grafana:
    build:
      context: .
      dockerfile: Dockerfile.grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_AUTH_DISABLE_SIGNOUT_MENU=true
    ports:
      - "3000:3000"  # Grafana UI
      - "4318:4318"  # OTLP HTTP receiver
    volumes:
      - grafana-data:/data
      - ${DATA_VOLUME_PATH}/schwab.db:/databases/schwab.db:ro
      - ${DATA_VOLUME_PATH}/alpaca.db:/databases/alpaca.db:ro
      - ./grafana-datasource.yaml:/otel-lgtm/grafana/conf/provisioning/datasources/sqlite.yaml:ro
    restart: unless-stopped

volumes:
  grafana-data:
